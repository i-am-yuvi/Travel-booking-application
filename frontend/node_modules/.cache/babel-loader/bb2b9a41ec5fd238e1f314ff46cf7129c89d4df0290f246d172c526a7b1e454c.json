{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * A helper library for handling pagination.\n *\n * @param {Client} client the client to make the API calls against\n * @protected\n */\nvar Pagination = /*#__PURE__*/function () {\n  function Pagination(client) {\n    _classCallCheck(this, Pagination);\n    this.client = client;\n  }\n\n  /**\n   * Fetch the page for the given page name, and make the next API call based on\n   * the previous request made.\n   *\n   * @param  {type} pageName the name of the page to fetch, should be available\n   *    as a link in the meta links in the response\n   * @param  {type} response the response containing the links to the next pages,\n   *   and the request used to make the previous call\n   * @return {Promise.<Response,ResponseError>} a Bluebird Promise\n   * @protected\n   */\n  _createClass(Pagination, [{\n    key: \"page\",\n    value: function page(pageName, response) {\n      var pageNumber = this.pageNumber(response, pageName);\n      if (pageNumber) {\n        return this.call(response.request, pageNumber);\n      } else {\n        return this.nullPromise();\n      }\n    }\n\n    // PRIVATE\n\n    /**\n     * Makes a new call for the new page number\n     *\n     * @param  {type} request    the request used to make the previous call\n     * @param  {type} pageNumber the page number to fetch\n     * @return {Promise.<Response,ResponseError>} a Bluebird Promise\n     * @private\n     */\n  }, {\n    key: \"call\",\n    value: function call(request, pageNumber) {\n      var params = request.params || {};\n      params['page'] = params['page'] || {};\n      params['page']['offset'] = pageNumber;\n      return this.client.request(request.verb, request.path, params);\n    }\n\n    /**\n     * Tries to determine the page number from the page name. If not present, it\n     * just returns null\n     *\n     * @param  {type} response the response containing the links to the next pages\n     * @param  {type} pageName the name of the page to fetch\n     * @return {number}\n     * @private\n     */\n  }, {\n    key: \"pageNumber\",\n    value: function pageNumber(response, pageName) {\n      try {\n        return response.result['meta']['links'][pageName].split('page%5Boffset%5D=')[1].split('&')[0];\n      } catch (TypeError) {\n        return null;\n      }\n    }\n\n    /**\n     * Returns a Promise that always resolves to null\n     *\n     * @return {Promise} a Promise that always resolves to null\n     * @private\n     */\n  }, {\n    key: \"nullPromise\",\n    value: function nullPromise() {\n      return new Promise(function (resolve) {\n        resolve(null);\n      });\n    }\n  }]);\n  return Pagination;\n}();\nvar _default = Pagination;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["Pagination","client","_classCallCheck","_createClass","key","value","page","pageName","response","pageNumber","call","request","nullPromise","params","verb","path","result","split","TypeError","Promise","resolve","_default","exports","module","default"],"sources":["/Users/yuvrajchhetri/Desktop/Travel-booking-napptive-hackathon/frontend/react-auth/node_modules/amadeus/src/amadeus/client/pagination.js"],"sourcesContent":["/**\n * A helper library for handling pagination.\n *\n * @param {Client} client the client to make the API calls against\n * @protected\n */\nclass Pagination {\n  constructor(client) {\n    this.client = client;\n  }\n\n  /**\n   * Fetch the page for the given page name, and make the next API call based on\n   * the previous request made.\n   *\n   * @param  {type} pageName the name of the page to fetch, should be available\n   *    as a link in the meta links in the response\n   * @param  {type} response the response containing the links to the next pages,\n   *   and the request used to make the previous call\n   * @return {Promise.<Response,ResponseError>} a Bluebird Promise\n   * @protected\n   */\n  page(pageName, response) {\n    let pageNumber = this.pageNumber(response, pageName);\n\n    if (pageNumber) {\n      return this.call(response.request, pageNumber);\n    } else {\n      return this.nullPromise();\n    }\n  }\n\n  // PRIVATE\n\n\n  /**\n   * Makes a new call for the new page number\n   *\n   * @param  {type} request    the request used to make the previous call\n   * @param  {type} pageNumber the page number to fetch\n   * @return {Promise.<Response,ResponseError>} a Bluebird Promise\n   * @private\n   */\n  call(request, pageNumber) {\n    let params = request.params || {};\n    params['page'] = params['page'] || {};\n    params['page']['offset'] = pageNumber;\n\n    return this.client.request(\n      request.verb,\n      request.path,\n      params\n    );\n  }\n\n  /**\n   * Tries to determine the page number from the page name. If not present, it\n   * just returns null\n   *\n   * @param  {type} response the response containing the links to the next pages\n   * @param  {type} pageName the name of the page to fetch\n   * @return {number}\n   * @private\n   */\n  pageNumber(response, pageName) {\n    try {\n      return response.result['meta']['links'][pageName]\n        .split('page%5Boffset%5D=')[1].split('&')[0];\n    } catch (TypeError) {\n      return null;\n    }\n  }\n\n  /**\n   * Returns a Promise that always resolves to null\n   *\n   * @return {Promise} a Promise that always resolves to null\n   * @private\n   */\n  nullPromise() {\n    return new Promise(function(resolve) { resolve(null); });\n  }\n}\n\nexport default Pagination;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AALA,IAMMA,UAAU;EACd,SAAAA,WAAYC,MAAM,EAAE;IAAAC,eAAA,OAAAF,UAAA;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACtB;;EAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAVEE,YAAA,CAAAH,UAAA;IAAAI,GAAA;IAAAC,KAAA,EAWA,SAAAC,KAAKC,QAAQ,EAAEC,QAAQ,EAAE;MACvB,IAAIC,UAAU,GAAG,IAAI,CAACA,UAAU,CAACD,QAAQ,EAAED,QAAQ,CAAC;MAEpD,IAAIE,UAAU,EAAE;QACd,OAAO,IAAI,CAACC,IAAI,CAACF,QAAQ,CAACG,OAAO,EAAEF,UAAU,CAAC;MAChD,CAAC,MAAM;QACL,OAAO,IAAI,CAACG,WAAW,EAAE;MAC3B;IACF;;IAEA;;IAGA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;EAPE;IAAAR,GAAA;IAAAC,KAAA,EAQA,SAAAK,KAAKC,OAAO,EAAEF,UAAU,EAAE;MACxB,IAAII,MAAM,GAAGF,OAAO,CAACE,MAAM,IAAI,CAAC,CAAC;MACjCA,MAAM,CAAC,MAAM,CAAC,GAAGA,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;MACrCA,MAAM,CAAC,MAAM,CAAC,CAAC,QAAQ,CAAC,GAAGJ,UAAU;MAErC,OAAO,IAAI,CAACR,MAAM,CAACU,OAAO,CACxBA,OAAO,CAACG,IAAI,EACZH,OAAO,CAACI,IAAI,EACZF,MAAM,CACP;IACH;;IAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EARE;IAAAT,GAAA;IAAAC,KAAA,EASA,SAAAI,WAAWD,QAAQ,EAAED,QAAQ,EAAE;MAC7B,IAAI;QACF,OAAOC,QAAQ,CAACQ,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAACT,QAAQ,CAAC,CAC9CU,KAAK,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAACA,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MAChD,CAAC,CAAC,OAAOC,SAAS,EAAE;QAClB,OAAO,IAAI;MACb;IACF;;IAEA;AACF;AACA;AACA;AACA;AACA;EALE;IAAAd,GAAA;IAAAC,KAAA,EAMA,SAAAO,YAAA,EAAc;MACZ,OAAO,IAAIO,OAAO,CAAC,UAASC,OAAO,EAAE;QAAEA,OAAO,CAAC,IAAI,CAAC;MAAE,CAAC,CAAC;IAC1D;EAAC;EAAA,OAAApB,UAAA;AAAA;AAAA,IAAAqB,QAAA,GAGYrB,UAAU;AAAAsB,OAAA,cAAAD,QAAA;AAAAE,MAAA,CAAAD,OAAA,GAAAA,OAAA,CAAAE,OAAA"},"metadata":{},"sourceType":"script","externalDependencies":[]}