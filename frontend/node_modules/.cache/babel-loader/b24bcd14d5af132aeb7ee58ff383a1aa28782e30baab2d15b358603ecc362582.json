{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _qs = _interopRequireDefault(require(\"qs\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n/**\n * A Request object containing all the compiled information about this request.\n *\n * @property {string} host the host used for this API call\n * @property {number} port the port for this API call. Standard set to 443.\n * @property {boolean} ssl wether this API call uses SSL\n * @property {string} scheme the scheme inferred from the SSL state\n * @property {string} verb the HTTP method, for example `GET` or `POST`\n * @property {string} path the full path of the API endpoint\n * @property {Object} params the parameters to pass in the query or body\n * @property {string} queryPath the path and query string used for the API call\n * @property {string} bearerToken the authentication token\n * @property {string} clientVersion the version of the Amadeus library\n * @property {string} languageVersion the version of Node used\n * @property {string} appId the custom ID of the application using this library\n * @property {string} appVersion the custom version of the application\n *  using this library\n * @property {Object} headers the request headers\n *\n * @param {Object} options\n */\nvar Request = /*#__PURE__*/function () {\n  function Request(options) {\n    _classCallCheck(this, Request);\n    this.host = options.host;\n    this.port = options.port;\n    this.ssl = options.ssl;\n    this.scheme = this.ssl ? 'https' : 'http';\n    this.verb = options.verb;\n    this.path = options.path;\n    this.params = options.params;\n    this.queryPath = this.fullQueryPath();\n    this.bearerToken = options.bearerToken;\n    this.clientVersion = options.clientVersion;\n    this.languageVersion = options.languageVersion.replace('v', '');\n    this.appId = options.appId;\n    this.appVersion = options.appVersion;\n    this.headers = {\n      'User-Agent': this.userAgent(),\n      'Accept': 'application/json, application/vnd.amadeus+json'\n    };\n    this.ListHTTPOverride = ['/v2/shopping/flight-offers', '/v1/shopping/seatmaps', '/v1/shopping/availability/flight-availabilities', '/v2/shopping/flight-offers/prediction', '/v1/shopping/flight-offers/pricing', '/v1/shopping/flight-offers/upselling'];\n    this.addAuthorizationHeader();\n    this.addContentTypeHeader();\n    this.addHTTPOverrideHeader();\n  }\n\n  // PROTECTED\n\n  /**\n   * Compiles the options for the HTTP request.\n   *\n   * Used by Client.execute when executing this request against the server.\n   *\n   * @return {Object} an associative array of options to be passed into the\n   *  Client.execute function\n   * @protected\n   */\n  _createClass(Request, [{\n    key: \"options\",\n    value: function options() {\n      var options = {\n        'host': this.host,\n        'port': this.port,\n        'protocol': \"\".concat(this.scheme, \":\"),\n        'path': this.queryPath,\n        'method': this.verb,\n        'headers': this.headers\n      };\n      return options;\n    }\n\n    /**\n     * Creats the body for the API cal, serializing the params if the verb is POST.\n     *\n     * @return {string} the serialized params\n     * @protected\n     */\n  }, {\n    key: \"body\",\n    value: function body() {\n      if (this.verb !== 'POST') {\n        return '';\n      } else {\n        if (!this.bearerToken) {\n          return _qs[\"default\"].stringify(this.params);\n        }\n        return this.params;\n      }\n    }\n\n    // PRIVATE\n\n    /**\n     * Build up the custom User Agent\n     *\n     * @return {string} a user agent in the format \"library/version language/version app/version\"\n     * @private\n     */\n  }, {\n    key: \"userAgent\",\n    value: function userAgent() {\n      var userAgent = \"amadeus-node/\".concat(this.clientVersion, \" node/\").concat(this.languageVersion);\n      if (!this.appId) {\n        return userAgent;\n      }\n      return \"\".concat(userAgent, \" \").concat(this.appId, \"/\").concat(this.appVersion);\n    }\n\n    /**\n     * Build the full query path, combining the path with the query params if the\n     * verb is 'GET'. For example: '/foo/bar?baz=qux'\n     *\n     * @return {string} the path and params combined into one string.\n     * @private\n     */\n  }, {\n    key: \"fullQueryPath\",\n    value: function fullQueryPath() {\n      if (this.verb === 'POST') {\n        return this.path;\n      } else {\n        return \"\".concat(this.path, \"?\").concat(_qs[\"default\"].stringify(this.params));\n      }\n    }\n\n    /**\n     * Adds an Authorization header if the BearerToken is present\n     *\n     * @private\n     */\n  }, {\n    key: \"addAuthorizationHeader\",\n    value: function addAuthorizationHeader() {\n      if (!this.bearerToken) {\n        return;\n      }\n      this.headers['Authorization'] = \"Bearer \".concat(this.bearerToken);\n    }\n\n    /**\n     * Adds an Content-Type header if the HTTP method equals POST\n     *\n     * @private\n     */\n  }, {\n    key: \"addContentTypeHeader\",\n    value: function addContentTypeHeader() {\n      if (this.verb === 'POST' && !this.bearerToken) {\n        this.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n      } else {\n        this.headers['Content-Type'] = 'application/vnd.amadeus+json';\n      }\n      return;\n    }\n\n    /**\n    * Adds HTTPOverride method if it is required\n    *\n    *  @private\n    */\n  }, {\n    key: \"addHTTPOverrideHeader\",\n    value: function addHTTPOverrideHeader() {\n      if (this.verb === 'POST' && this.ListHTTPOverride.includes(this.path)) {\n        this.headers['X-HTTP-Method-Override'] = 'GET';\n      }\n      return;\n    }\n  }]);\n  return Request;\n}();\nvar _default = Request;\nexports[\"default\"] = _default;\nmodule.exports = exports.default;","map":{"version":3,"names":["_qs","_interopRequireDefault","require","obj","__esModule","_typeof","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","_toPropertyKey","key","_createClass","protoProps","staticProps","arg","_toPrimitive","String","input","hint","prim","toPrimitive","undefined","res","call","Number","Request","options","host","port","ssl","scheme","verb","path","params","queryPath","fullQueryPath","bearerToken","clientVersion","languageVersion","replace","appId","appVersion","headers","userAgent","ListHTTPOverride","addAuthorizationHeader","addContentTypeHeader","addHTTPOverrideHeader","value","concat","body","stringify","includes","_default","exports","module","default"],"sources":["/Users/yuvrajchhetri/Desktop/Travel-booking-napptive-hackathon/frontend/react-auth/node_modules/amadeus/src/amadeus/client/request.js"],"sourcesContent":["import qs from 'qs';\n\n/**\n * A Request object containing all the compiled information about this request.\n *\n * @property {string} host the host used for this API call\n * @property {number} port the port for this API call. Standard set to 443.\n * @property {boolean} ssl wether this API call uses SSL\n * @property {string} scheme the scheme inferred from the SSL state\n * @property {string} verb the HTTP method, for example `GET` or `POST`\n * @property {string} path the full path of the API endpoint\n * @property {Object} params the parameters to pass in the query or body\n * @property {string} queryPath the path and query string used for the API call\n * @property {string} bearerToken the authentication token\n * @property {string} clientVersion the version of the Amadeus library\n * @property {string} languageVersion the version of Node used\n * @property {string} appId the custom ID of the application using this library\n * @property {string} appVersion the custom version of the application\n *  using this library\n * @property {Object} headers the request headers\n *\n * @param {Object} options\n */\nclass Request {\n  constructor(options) {\n    this.host            = options.host;\n    this.port            = options.port;\n    this.ssl             = options.ssl;\n    this.scheme          = this.ssl ? 'https' : 'http';\n    this.verb            = options.verb;\n    this.path            = options.path;\n    this.params          = options.params;\n    this.queryPath       = this.fullQueryPath();\n    this.bearerToken     = options.bearerToken;\n    this.clientVersion   = options.clientVersion;\n    this.languageVersion = options.languageVersion.replace('v', '');\n    this.appId           = options.appId;\n    this.appVersion      = options.appVersion;\n    this.headers         = {\n      'User-Agent' : this.userAgent(),\n      'Accept' : 'application/json, application/vnd.amadeus+json'\n    };\n    this.ListHTTPOverride= [\n      '/v2/shopping/flight-offers',\n      '/v1/shopping/seatmaps',\n      '/v1/shopping/availability/flight-availabilities',\n      '/v2/shopping/flight-offers/prediction',\n      '/v1/shopping/flight-offers/pricing',\n      '/v1/shopping/flight-offers/upselling'\n    ];\n    this.addAuthorizationHeader();\n    this.addContentTypeHeader();\n    this.addHTTPOverrideHeader();\n  }\n\n  // PROTECTED\n\n  /**\n   * Compiles the options for the HTTP request.\n   *\n   * Used by Client.execute when executing this request against the server.\n   *\n   * @return {Object} an associative array of options to be passed into the\n   *  Client.execute function\n   * @protected\n   */\n  options() {\n    let options = {\n      'host' : this.host,\n      'port' : this.port,\n      'protocol' : `${this.scheme}:`,\n      'path' : this.queryPath,\n      'method' : this.verb,\n      'headers' : this.headers\n    };\n    return options;\n  }\n\n  /**\n   * Creats the body for the API cal, serializing the params if the verb is POST.\n   *\n   * @return {string} the serialized params\n   * @protected\n   */\n  body() {\n    if (this.verb !== 'POST') { return ''; }\n    else {\n      if (!this.bearerToken) {\n        return qs.stringify(this.params);\n      }\n      return this.params;\n    }\n  }\n\n  // PRIVATE\n\n  /**\n   * Build up the custom User Agent\n   *\n   * @return {string} a user agent in the format \"library/version language/version app/version\"\n   * @private\n   */\n  userAgent() {\n    let userAgent = `amadeus-node/${this.clientVersion} node/${this.languageVersion}`;\n    if (!this.appId) { return userAgent; }\n    return `${userAgent} ${this.appId}/${this.appVersion}`;\n  }\n\n  /**\n   * Build the full query path, combining the path with the query params if the\n   * verb is 'GET'. For example: '/foo/bar?baz=qux'\n   *\n   * @return {string} the path and params combined into one string.\n   * @private\n   */\n  fullQueryPath() {\n    if (this.verb === 'POST') { return this.path; }\n    else { return `${this.path}?${qs.stringify(this.params)}`; }\n  }\n\n  /**\n   * Adds an Authorization header if the BearerToken is present\n   *\n   * @private\n   */\n  addAuthorizationHeader() {\n    if (!this.bearerToken) { return; }\n    this.headers['Authorization'] = `Bearer ${this.bearerToken}`;\n  }\n\n  /**\n   * Adds an Content-Type header if the HTTP method equals POST\n   *\n   * @private\n   */\n  addContentTypeHeader() {\n    if (this.verb === 'POST' && !this.bearerToken) {\n      this.headers['Content-Type'] = 'application/x-www-form-urlencoded';\n    } else {\n      this.headers['Content-Type'] = 'application/vnd.amadeus+json';\n    }\n    return;\n  }\n\n  /**\n  * Adds HTTPOverride method if it is required\n  *\n  *  @private\n  */\n  addHTTPOverrideHeader() {\n    if (this.verb === 'POST' && this.ListHTTPOverride.includes(this.path)) {\n      this.headers['X-HTTP-Method-Override'] = 'GET';\n    }\n    return;\n  }\n}\n\nexport default Request;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}